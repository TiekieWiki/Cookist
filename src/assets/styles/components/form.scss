@import '../mixins/interactions.scss';

@mixin form-element {
  width: 100%;
  padding: $gap-small $gap-medium;
  background-color: transparent;
  border: $border-medium solid var(--color-primary);

  &:not(:disabled) {
    @include zoom-on-hover($scale-small);
    @include outline-on-focus;
  }

  &:user-invalid {
    border-color: var(--color-error);
  }
}

form {
  display: grid;
  gap: $gap-large;
}

label {
  width: 100%;
}

input[type='text'],
input[type='password'],
input[type='search'],
input[type='email'],
input[type='number'],
input[type='date'],
textarea {
  @include form-element;

  border-radius: $border-radius-medium;

  &:disabled {
    background-color: var(--color-disabled);
    cursor: auto;
  }

}

input[type='date'] {
  padding: calc($gap-small - 2px) $gap-medium;
}

input[type='file'] {
  width: 100%;
}

.select {
  @include form-element;

  display: grid;
  grid-template-areas: 'select';
  align-items: center;
  border-radius: $border-radius-medium;
  cursor: pointer;

  &::after {
    content: '';
    grid-area: select;
    justify-self: end;
    width: $size-icon-small;
    height: calc($size-icon-small / 3 * 2);
    background-color: var(--color-primary);
    clip-path: polygon(0% 0%, 100% 0%, 50% 100%);
  }

  &:has(select:disabled) {
    background-color: var(--color-disabled);
    cursor: auto;
  }

  select {
    appearance: none;
    z-index: 1;
    grid-area: select;
    width: 100%;
    padding: 0 $size-icon-small 0 0;
    margin: 0;
    color: var(--color-text-primary);
    background-color: transparent;
    border: none;
    outline: none;
    cursor: inherit;

    &::-ms-expand {
      display: none;
    }

    option {
      color: var(--color-text-primary);
      background-color: var(--color-background-primary);
    }
  }
}

button {
  @include form-element;

  display: grid;
  grid-template-columns: 1fr;
  justify-items: center;
  align-items: center;
  align-self: start;
  padding: calc($gap-small + 3px) $gap-large;
  background-image: var(--color-accent-primary);
  border: none;
  border-radius: $border-radius-medium;
  color: var(--color-text-secondary);
  cursor: pointer;

  &:disabled {
    background-image: var(--color-accent-disabled);
    cursor: auto;
  }

  &.icon {
    display: flex;
    gap: $gap-small;
    justify-content: center;
  }

  &.delete {
    background-image: var(--color-accent-error);
  }
}

input {
  &::file-selector-button {
    @include form-element;

    display: grid;
    grid-template-columns: auto $size-icon-small;
    justify-self: start;
    align-self: center;
    margin-bottom: $gap-small;
    background-image: var(--color-accent-primary);
    border: none;
    border-radius: $border-radius-medium;
    color: var(--color-text-secondary);
    cursor: pointer;
  }

  &:disabled {
    &::file-selector-button {
      background-image: var(--color-accent-disabled);
      cursor: auto;
    }
  }
}

input:disabled::file-selector-button {
  background-image: var(--color-accent-disabled);
  cursor: auto;
}

.label-group {
  label {
    display: grid;
    grid-template-columns: $size-icon-small auto;
    gap: $gap-small;

    input[type='checkbox'] {
      -webkit-appearance: none;
      appearance: none;
      display: grid;
      place-content: center;
      width: calc($size-icon-small + 0.2em);
      height: calc($size-icon-small + 0.2em);
      background-color: transparent;
      color: var(--color-primary);
      border: $border-medium solid var(--color-primary);
      border-radius: $border-radius-small;
      cursor: pointer;

      @include zoom-on-hover($scale-medium);
      @include outline-on-focus;

      &::before {
        content: '';
        width: calc($size-icon-small - 0.3em);
        height: calc($size-icon-small - 0.3em);
        transform: scale(0);
        transition: $speed-medium transform ease-in-out;
        box-shadow: inset $size-icon-small $size-icon-small var(--color-primary);
      }

      &:checked::before {
        transform: scale(1);
      }

      &:disabled {
        background-color: var(--color-disabled);
        cursor: auto;
      }
    }

    &:not(:first-child) {
      margin-top: $gap-small;
    }
  }
}

.toggle {
  position: relative;
  display: inline-block;
  width: $gap-xlarge * 2 - $gap-xxsmall * 2;
  height: $gap-xlarge;

  input {
    opacity: 0;
    width: 0;
    height: 0;

    &:checked + .slider {
      background-color: var(--color-primary);

      &::before {
        -webkit-transform: translateX($gap-xlarge - $gap-xxsmall * 4);
        -ms-transform: translateX($gap-xlarge - $gap-xxsmall * 4);
        transform: translateX($gap-xlarge - $gap-xxsmall * 4);
      }
    }

    &:focus + .slider {
      box-shadow: 0 0 1px var(--color-primary);
    }
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--color-disabled);
    border-radius: $gap-xlarge;
    -webkit-transition: .4s;
    transition: .4s;

    &::before {
      position: absolute;
      content: "";
      height: $gap-xlarge - $gap-xxsmall * 4;
      width: $gap-xlarge - $gap-xxsmall * 4;
      left: $gap-xxsmall * 2;
      bottom: $gap-xxsmall * 2;
      background-color: var(--color-text-secondary);
      border-radius: 50%;
      -webkit-transition: .4s;
      transition: .4s;
    }
  }
}

.error {
  padding: $gap-xxsmall $gap-small;
  border-radius: $border-radius-medium;
  background-color: var(--color-error);
}

.success {
  padding: $gap-xxsmall $gap-small;
  border-radius: $border-radius-medium;
  background-color: var(--color-success);
}
